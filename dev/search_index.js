var documenterSearchIndex = {"docs":
[{"location":"style/#Julia-Coding-Style-Guide-for-SIIP-1","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"","category":"section"},{"location":"style/#Goals-1","page":"Julia Coding Style Guide for SIIP","title":"Goals","text":"","category":"section"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Define a straightforward set of rules that lead to consistent, readable","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"code.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Developers focus on producing high quality code, not how to format it.","category":"page"},{"location":"style/#Base-1","page":"Julia Coding Style Guide for SIIP","title":"Base","text":"","category":"section"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Follow the official","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Julia style guide except for deviations noted here.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Follow Julia contribution guidelines, notably its line length","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"limit.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Follow Julia guidelines for docstrings.\nFollow JuMP coding standards,","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"including its deviations from the Julia style guide.  In particular, note its policies on","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"whitespace\nreturn statements\nvariable names.\nRead The Zen of Python.\nConsider using a plugin that configures your text editor to use EditorConfig settings.","category":"page"},{"location":"style/#Code-Organization-1","page":"Julia Coding Style Guide for SIIP","title":"Code Organization","text":"","category":"section"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Import standard modules, then 3rd-party modules, then yours. Include a blank","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"line between each group.","category":"page"},{"location":"style/#Modules:-TODO-1","page":"Julia Coding Style Guide for SIIP","title":"Modules:  TODO","text":"","category":"section"},{"location":"style/#Comments-1","page":"Julia Coding Style Guide for SIIP","title":"Comments","text":"","category":"section"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Use comments to describe non-obvious or non-trivial aspects of code.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Describe why something was done but not how.  The \"how\" should be apparent from the code itself.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Use complete sentences and proper grammar.\nInclude a space in between the \"#\" and the first word of the comment.\nUse these tags in comments to describe known work:\nTODO:  tasks that need to be done\nFIXME:  code that needs refactoring\nBUG:  known bug that exists. Should include a bug ID and tracking system.\nPERF:  known performance limitation that needs improvement","category":"page"},{"location":"style/#Constructors-1","page":"Julia Coding Style Guide for SIIP","title":"Constructors","text":"","category":"section"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Per guidance from Julia documentation, use inner constructors to enforce","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"restrictions on parameters or to allow construction of self-referential objects. Use outer constructors to provide default values or to perform customization.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Document the reason why the outer constructor is different.\nNote that the compiler will provide a default constructor with all struct","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"members if no inner constructor is defined.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"When creating a constructor use \"function Foo()\" instead of \"Foo() = ...\"","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"One exception is the case where one file has all single-line functions.","category":"page"},{"location":"style/#Exceptions-1","page":"Julia Coding Style Guide for SIIP","title":"Exceptions","text":"","category":"section"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Use exceptions for unexpected errors and not for normal error handling.\nDetection of an unsupported data format from a user should likely throw","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"an exception and terminate the application.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Do not use try/catch to handle retrieving a potentially-missing key from a","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"dictionary.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Use @assert statements to guard against programming errors. Do not use them","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"after detecting bad user input. Note that they may be compiled out in release builds.","category":"page"},{"location":"style/#Globals-1","page":"Julia Coding Style Guide for SIIP","title":"Globals","text":"","category":"section"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Global constants should use UPPER_CASE and be declared const.\nIf global variables are needed, prefix them with \"g_\".\nDon't use magic numbers. Instead, define const globals or Enums (Julia","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"@enum).","category":"page"},{"location":"style/#One-line-Conditionals-1","page":"Julia Coding Style Guide for SIIP","title":"One-line Conditionals","text":"","category":"section"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Julia code base uses this idiom frequently:  <cond> && <statement> Example:","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"function fact(n::Int)\n   n >= 0 || error(\"n must be non-negative\")\n   n == 0 && return 1\n   n * fact(n-1)\nend","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"This is acceptable for simple code as in this example. However, in general, prefer to write out an entire if statement.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Ternary operators provide a way to write clean, concise code.  Use good judgement.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Good:","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"y = x > 0 ? x : -x","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"There are many examples in our codebase that use the form <cond> ? <statement> : <statement>.  These can be expressed much more clearly in an if/else statement.","category":"page"},{"location":"style/#Unit-Tests-1","page":"Julia Coding Style Guide for SIIP","title":"Unit Tests","text":"","category":"section"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"All code should be tested.","category":"page"},{"location":"style/#Whitespace-1","page":"Julia Coding Style Guide for SIIP","title":"Whitespace","text":"","category":"section"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"If many function arguments cause the line length to be exceeded, put one","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"argument per line. In some cases it may make sense to pair some variables on the same line.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"function foo(var1::String,\n             var2::String,\n             var3::String,\n             var4::String,\n             var5::String,\n             var6::String)","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Do not surround equal signs with spaces when passing keyword args to a","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"function or defining default values in function declarations.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Do not right-align equal signs when assigning groups of variables. It causes","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"unnecessary changes whenever someone adds a new variable with a longer name.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Bad:","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"x   = 1\nfoo = 2","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Good:","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"x = 1\nfoo = 2","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Define abstract types on one line. Given the lack of IDE support for Julia,","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"this makes it easier to find type definitions.","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Bad:","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"abstract type\n    Foo\nend","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"Good:","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"","category":"page"},{"location":"style/#","page":"Julia Coding Style Guide for SIIP","title":"Julia Coding Style Guide for SIIP","text":"abstract type Foo end","category":"page"},{"location":"man/logging/#Logging-1","page":"Logging","title":"Logging","text":"","category":"section"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"This document describes logging facilities available in the modules that use InfrastructureSystems. The examples assume the following imports:","category":"page"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"import Logging\nimport InfrastructureSystems: configure_logging, open_file_logger, MultiLogger, LogEventTracker","category":"page"},{"location":"man/logging/#Use-Cases-1","page":"Logging","title":"Use Cases","text":"","category":"section"},{"location":"man/logging/#Enable-logging-in-REPL-or-Jupyter-Notebook-1","page":"Logging","title":"Enable logging in REPL or Jupyter Notebook","text":"","category":"section"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"Use configure_logging to create a logger with your preferences (console and/or file, levels, etc.).","category":"page"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"Note: log messages are not automatically flushed to files. Call flush(logger) to make this happen.","category":"page"},{"location":"man/logging/#Example-1","page":"Logging","title":"Example","text":"","category":"section"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"logger = configure_logging(; filename=\"log.txt\")\n@info \"hello world\"\nflush(logger)\n@error \"some error\"\nclose(logger)","category":"page"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"The function provides lots of customization. Refer to the docstring for complete details.","category":"page"},{"location":"man/logging/#Log-to-console-and-file-in-an-application-or-unit-test-environment.-1","page":"Logging","title":"Log to console and file in an application or unit test environment.","text":"","category":"section"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"Create a MultiLogger from Logging.ConsoleLogger and Logging.SimpleLogger. Use open_file_logger to guarantee that all messages get flushed to the file.","category":"page"},{"location":"man/logging/#Example-2","page":"Logging","title":"Example","text":"","category":"section"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"console_logger = ConsoleLogger(stderr, Logging.Error)\n\nopen_file_logger(\"log.txt\", Logging.Info) do file_logger\n    multi_logger = MultiLogger([console_logger, file_logger])\n    global_logger(multi_logger)\n\n    do_stuff()\nend","category":"page"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"Note: If someone may execute the code in the REPL then wrap that code in a try/finally block and reset the global logger upon exit.","category":"page"},{"location":"man/logging/#Example-3","page":"Logging","title":"Example","text":"","category":"section"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"function run_tests()\n    console_logger = ConsoleLogger(stderr, Logging.Error)\n\n    open_file_logger(\"log.txt\", Logging.Info) do file_logger\n        multi_logger = MultiLogger([console_logger, file_logger])\n        global_logger(multi_logger)\n\n        do_stuff()\n    end\nend\n\nlogger = global_logger()\n\ntry\n    run_tests()\nfinally\n    # Guarantee that the global logger is reset.\n    global_logger(logger)\n    nothing\nend","category":"page"},{"location":"man/logging/#Suppress-frequent-messages-1","page":"Logging","title":"Suppress frequent messages","text":"","category":"section"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"The standard Logging module in Julia provides a method to suppress messages. Tag the log message with maxlog=X.","category":"page"},{"location":"man/logging/#Example-4","page":"Logging","title":"Example","text":"","category":"section"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"for i in range(1, length=100)\n    @error \"something happened\" i maxlog=2\nend","category":"page"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"Only 2 messages will get logged.","category":"page"},{"location":"man/logging/#Get-a-summary-of-log-messages-1","page":"Logging","title":"Get a summary of log messages","text":"","category":"section"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"By default a MultiLogger creates a LogEventTracker that keeps counts of all messages. Call report_log_summary after execution.","category":"page"},{"location":"man/logging/#Example-5","page":"Logging","title":"Example","text":"","category":"section"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"logger = configure_logging(; filename=\"log.txt\")\n@info \"hello world\"\n\n# Include a summary in the log file.\n@info report_log_summary(logger)\nclose(logger)","category":"page"},{"location":"man/logging/#Example-output-1","page":"Logging","title":"Example output","text":"","category":"section"},{"location":"man/logging/#","page":"Logging","title":"Logging","text":"julia> for i in range(1, length=100)\n           @info \"hello\" maxlog=2\n           @warn \"beware\" maxlog=2\n       end\njulia> @info report_log_summary(logger)\n┌ Info:\n│ Log message summary:\n│\n│ 0 Error events:\n│\n│ 1 Warn events:\n│   count=100 at REPL[19]:3\n│     example message=\"beware\"\n│     suppressed=98\n│\n│ 1 Info events:\n│   count=100 at REPL[19]:2\n│     example message=\"hello\"\n└     suppressed=98","category":"page"},{"location":"api/InfrastructureSystems/#InfrastructureSystems-1","page":"InfrastructureSystems","title":"InfrastructureSystems","text":"","category":"section"},{"location":"api/InfrastructureSystems/#","page":"InfrastructureSystems","title":"InfrastructureSystems","text":"CurrentModule = InfrastructureSystems\nDocTestSetup  = quote\n    using InfrastructureSystems\nend","category":"page"},{"location":"api/InfrastructureSystems/#","page":"InfrastructureSystems","title":"InfrastructureSystems","text":"API documentation","category":"page"},{"location":"api/InfrastructureSystems/#","page":"InfrastructureSystems","title":"InfrastructureSystems","text":"Pages = [\"InfrastructureSystems.md\"]","category":"page"},{"location":"api/InfrastructureSystems/#Index-1","page":"InfrastructureSystems","title":"Index","text":"","category":"section"},{"location":"api/InfrastructureSystems/#","page":"InfrastructureSystems","title":"InfrastructureSystems","text":"Pages = [\"InfrastructureSystems.md\"]","category":"page"},{"location":"api/InfrastructureSystems/#Exported-1","page":"InfrastructureSystems","title":"Exported","text":"","category":"section"},{"location":"api/InfrastructureSystems/#","page":"InfrastructureSystems","title":"InfrastructureSystems","text":"Modules = [InfrastructureSystems]\nPrivate = false","category":"page"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.DataFormatError","page":"InfrastructureSystems","title":"InfrastructureSystems.DataFormatError","text":"Thrown upon detection of user data that is not supported.\n\n\n\n\n\n","category":"type"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.Deterministic","page":"InfrastructureSystems","title":"InfrastructureSystems.Deterministic","text":"A deterministic forecast for a particular data field in a Component.\n\n\n\n\n\n","category":"type"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.Deterministic-Tuple{InfrastructureSystemsType,String,Dates.Period,Dates.DateTime,Int64}","page":"InfrastructureSystems","title":"InfrastructureSystems.Deterministic","text":"Constructs Deterministic after constructing a TimeArray from initialtime and timesteps.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.Deterministic-Tuple{InfrastructureSystemsType,String,TimeSeries.TimeArray}","page":"InfrastructureSystems","title":"InfrastructureSystems.Deterministic","text":"Constructs Deterministic from a InfrastructureSystemsType, label, and TimeArray.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.FlattenIteratorWrapper","page":"InfrastructureSystems","title":"InfrastructureSystems.FlattenIteratorWrapper","text":"Wrapper around Iterators.Flatten to provide total length.\n\n\n\n\n\n","category":"type"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.Forecasts","page":"InfrastructureSystems","title":"InfrastructureSystems.Forecasts","text":"Container for forecasts and their metadata..\n\n\n\n\n\n","category":"type"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.Forecasts-Tuple{NamedTuple}","page":"InfrastructureSystems","title":"InfrastructureSystems.Forecasts","text":"Partially constructs Forecasts from JSON. Forecasts are not constructed.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.InfrastructureSystemsInternal","page":"InfrastructureSystems","title":"InfrastructureSystems.InfrastructureSystemsInternal","text":"Internal storage common to InfrastructureSystems types.\n\n\n\n\n\n","category":"type"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.InfrastructureSystemsInternal-Tuple{}","page":"InfrastructureSystems","title":"InfrastructureSystems.InfrastructureSystemsInternal","text":"Creates PowerSystemInternal with a UUID.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.LogEvent","page":"InfrastructureSystems","title":"InfrastructureSystems.LogEvent","text":"Contains information describing a log event.\n\n\n\n\n\n","category":"type"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.LogEventTracker","page":"InfrastructureSystems","title":"InfrastructureSystems.LogEventTracker","text":"LogEventTracker(Tuple{Logging.LogLevel})\n\nTracks counts of all log events by level.\n\nExamples\n\nLogEventTracker()\nLogEventTracker((Logging.Info, Logging.Warn, Logging.Error))\n\n\n\n\n\n","category":"type"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.MultiLogger","page":"InfrastructureSystems","title":"InfrastructureSystems.MultiLogger","text":"MultiLogger(Array{AbstractLogger}, Union{LogEventTracker, Nothing})\n\nRedirects log events to multiple loggers. The primary use case is to allow logging to both a file and the console. Secondarily, it can track the counts of all log messages.\n\nExample\n\nMultiLogger([ConsoleLogger(stderr), SimpleLogger(stream)], LogEventTracker())\n\n\n\n\n\n","category":"type"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.MultiLogger-Union{Tuple{Array{T,N} where N}, Tuple{T}} where T<:Base.CoreLogging.AbstractLogger","page":"InfrastructureSystems","title":"InfrastructureSystems.MultiLogger","text":"Creates a MultiLogger with no event tracking.\n\nExample\n\nMultiLogger([ConsoleLogger(stderr), SimpleLogger(stream)])\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.Probabilistic","page":"InfrastructureSystems","title":"InfrastructureSystems.Probabilistic","text":"A Probabilistic forecast for a particular data field in a Component.\n\n\n\n\n\n","category":"type"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.Probabilistic-Tuple{InfrastructureSystemsType,String,Array{Float64,1},TimeSeries.TimeArray}","page":"InfrastructureSystems","title":"InfrastructureSystems.Probabilistic","text":"Constructs Probabilistic Forecast after constructing a TimeArray from initialtime and timesteps.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.Probabilistic-Tuple{InfrastructureSystemsType,String,Dates.Period,Dates.DateTime,Array{Float64,1},Int64}","page":"InfrastructureSystems","title":"InfrastructureSystems.Probabilistic","text":"Constructs Probabilistic after constructing a TimeArray from initialtime and timesteps.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.ScenarioBased","page":"InfrastructureSystems","title":"InfrastructureSystems.ScenarioBased","text":"A Discrete Scenario Based forecast for a particular data field in a Component.\n\n\n\n\n\n","category":"type"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.ScenarioBased-Tuple{InfrastructureSystemsType,String,Dates.Period,Dates.DateTime,Int64,Int64}","page":"InfrastructureSystems","title":"InfrastructureSystems.ScenarioBased","text":"Constructs ScenarioBased Forecast after constructing a TimeArray from initialtime and timesteps.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.ScenarioBased-Tuple{InfrastructureSystemsType,String,TimeSeries.TimeArray}","page":"InfrastructureSystems","title":"InfrastructureSystems.ScenarioBased","text":"Constructs ScenarioBased Forecast after constructing a TimeArray from initialtime and timesteps.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.TimeseriesFileMetadata","page":"InfrastructureSystems","title":"InfrastructureSystems.TimeseriesFileMetadata","text":"Describes how to construct forecasts from raw timeseries data files.\n\n\n\n\n\n","category":"type"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.add_component!-Union{Tuple{T}, Tuple{Components,T}} where T<:InfrastructureSystemsType","page":"InfrastructureSystems","title":"InfrastructureSystems.add_component!","text":"add_component!(\n               components::Components,\n               component::T;\n               kwargs...\n              ) where T <: InfrastructureSystemsType\n\nAdd a component.\n\nThrows ArgumentError if the component's name is already stored for its concrete type.\n\nThrows InvalidRange if any of the component's field values are outside of defined valid range.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.add_forecast!","page":"InfrastructureSystems","title":"InfrastructureSystems.add_forecast!","text":"add_forecast!(\n              data::SystemData,\n              ta::TimeSeries.TimeArray,\n              component::InfrastructureSystemsType,\n              label::AbstractString,\n              scaling_factor::Union{String, Float64}=1.0,\n             )\n\nAdd a forecast to a system from a TimeSeries.TimeArray.\n\nSee TimeseriesFileMetadata for description of scaling_factor.\n\n\n\n\n\n","category":"function"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.add_forecast!","page":"InfrastructureSystems","title":"InfrastructureSystems.add_forecast!","text":"add_forecast!(\n              data::SystemData,\n              df::DataFrames.DataFrame,\n              component::InfrastructureSystemsType,\n              label::AbstractString,\n              scaling_factor::Union{String, Float64}=1.0;\n              timestamp=:timestamp,\n             )\n\nAdd a forecast to a system from a DataFrames.DataFrame.\n\nSee TimeseriesFileMetadata for description of scaling_factor.\n\n\n\n\n\n","category":"function"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.add_forecast!","page":"InfrastructureSystems","title":"InfrastructureSystems.add_forecast!","text":"add_forecast!(\n              data::SystemData,\n              filename::AbstractString,\n              component::InfrastructureSystemsType,\n              label::AbstractString,\n              scaling_factor::Union{String, Float64}=1.0,\n             )\n\nAdd a forecast from a CSV file.\n\nSee TimeseriesFileMetadata for description of scaling_factor.\n\n\n\n\n\n","category":"function"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.add_forecast!-Union{Tuple{T}, Tuple{SystemData,T}} where T<:Forecast","page":"InfrastructureSystems","title":"InfrastructureSystems.add_forecast!","text":"add_forecast!(data::SystemData, forecasts)\n\nAdd forecasts.\n\nArguments\n\ndata::SystemData: infrastructure\nforecast: Any object of subtype forecast\n\nThrows ArgumentError if the forecast's component is not stored in the system.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.add_forecasts!-Tuple{SystemData,Any}","page":"InfrastructureSystems","title":"InfrastructureSystems.add_forecasts!","text":"add_forecasts!(data::SystemData, forecasts)\n\nAdd forecasts.\n\nArguments\n\ndata::SystemData: system\nforecasts: iterable (array, iterator, etc.) of Forecast values\n\nThrows DataFormatError if\n\nA component-label pair is not unique within a forecast array.\nA forecast has a different resolution than others.\nA forecast has a different horizon than others.\n\nThrows ArgumentError if the forecast's component is not stored in the system.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.clear_forecasts!-Tuple{Forecasts}","page":"InfrastructureSystems","title":"InfrastructureSystems.clear_forecasts!","text":"clear_forecasts!(forecasts::Forecasts)\n\nRemove all forecast objects from a Forecasts\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.configure_logging-Tuple{}","page":"InfrastructureSystems","title":"InfrastructureSystems.configure_logging","text":"configure_logging([console, console_stream, console_level,\n                   file, filename, file_level, file_mode,\n                   tracker, set_global])\n\nCreates console and file loggers per caller specification and returns a MultiLogger.\n\nNote: If logging to a file users must call Base.close() on the returned MultiLogger to ensure that all events get flushed.\n\nArguments\n\nconsole::Bool=true: create console logger\nconsole_stream::IOStream=stderr: stream for console logger\nconsole_level::Logging.LogLevel=Logging.Error: level for console messages\nfile::Bool=true: create file logger\nfilename::String=log.txt: log file\nfile_level::Logging.LogLevel=Logging.Info: level for file messages\nfile_mode::String=w+: mode used when opening log file\ntracker::Union{LogEventTracker, Nothing}=LogEventTracker(): optionally track log events\nset_global::Bool=true: set the created logger as the global logger\n\nExample\n\nlogger = configure_logging(filename=\"mylog.txt\")\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_component-Tuple{Deterministic}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_component","text":"Get Deterministic component.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_component-Tuple{Probabilistic}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_component","text":"Get Probabilistic component.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_component-Tuple{ScenarioBased}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_component","text":"Get ScenarioBased component.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_component-Union{Tuple{T}, Tuple{Type{T},Components,AbstractString}} where T<:InfrastructureSystemsType","page":"InfrastructureSystems","title":"InfrastructureSystems.get_component","text":"get_component(\n              ::Type{T},\n              components::Components,\n              name::AbstractString\n             )::Union{T, Nothing} where T <: InfrastructureSystemsType\n\nGet the component of concrete type T with name. Returns nothing if no component matches.\n\nSee get_components_by_name if the concrete type is unknown.\n\nThrows ArgumentError if T is not a concrete type.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_components-Union{Tuple{T}, Tuple{Type{T},Components}} where T<:InfrastructureSystemsType","page":"InfrastructureSystems","title":"InfrastructureSystems.get_components","text":"get_components(\n               ::Type{T},\n               components::Components,\n              )::FlattenIteratorWrapper{T} where T <: InfrastructureSystemsType\n\nReturns an iterator of components. T can be concrete or abstract. Call collect on the result if an array is desired.\n\nSee also: iterate_components\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_components_by_name-Union{Tuple{T}, Tuple{Type{T},Components,AbstractString}} where T<:InfrastructureSystemsType","page":"InfrastructureSystems","title":"InfrastructureSystems.get_components_by_name","text":"get_components_by_name(\n                       ::Type{T},\n                       components::Components,\n                       name::AbstractString\n                      )::Vector{T} where T <: InfrastructureSystemsType\n\nGet the components of abstract type T with name. Note that InfrastructureSystems enforces unique names on each concrete type but not across concrete types.\n\nSee get_component if the concrete type is known.\n\nThrows ArgumentError if T is not an abstract type.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_data-Tuple{Deterministic}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_data","text":"Get Deterministic data.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_data-Tuple{Probabilistic}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_data","text":"Get Probabilistic data.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_data-Tuple{ScenarioBased}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_data","text":"Get ScenarioBased data.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_forecast_component_name-Tuple{Forecast}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_forecast_component_name","text":"Get Forecast component name.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_forecast_initial_times-Tuple{Forecasts}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_forecast_initial_times","text":"get_forecast_initial_times(forecasts::Forecasts)::Vector{Dates.DateTime}\n\nReturn sorted forecast initial times.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_forecast_value-Tuple{Deterministic,Any}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_forecast_value","text":"gets the value of a Deterministic forecast at a given index or DateTime timestamp\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_forecast_value-Tuple{Forecast,Any}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_forecast_value","text":"gets the array of values of a forecast at a given index or DateTime timestamp\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_forecasts","page":"InfrastructureSystems","title":"InfrastructureSystems.get_forecasts","text":"get_forecasts(\n              forecasts::Forecasts,\n              initial_time::Dates.DateTime,\n              components_iterator,\n              label::Union{String, Nothing}=nothing,\n             )\n\nArguments\n\nforecasts::Forecasts: system\ninitial_time::Dates.DateTime: time designator for the forecast\ncomponents_iter: iterable (array, iterator, etc.) of Component values\nlabel::Union{String, Nothing}: forecast label or nothing\n\nReturn forecasts of any type <: Forecast that match the components and label.\n\nThis method is slower than the first version because it has to compare components and label as well as build a new vector.\n\nThrows ArgumentError if eltype(components_iterator) is a concrete type and no forecast is found for a component.\n\n\n\n\n\n","category":"function"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_forecasts-Union{Tuple{T}, Tuple{Type{T},Forecasts,DateTime,Any}, Tuple{Type{T},Forecasts,DateTime,Any,Union{Nothing, String}}} where T<:Forecast","page":"InfrastructureSystems","title":"InfrastructureSystems.get_forecasts","text":"get_forecasts(\n              ::Type{T},\n              forecasts::Forecasts,\n              initial_time::Dates.DateTime,\n              components_iterator,\n              label::Union{String, Nothing}=nothing,\n             )::Vector{Forecast}\n\nArguments\n\nforecasts::Forecasts: system\ninitial_time::Dates.DateTime: time designator for the forecast\ncomponents_iter: iterable (array, iterator, etc.) of Component values\nlabel::Union{String, Nothing}: forecast label or nothing\n\nReturn forecasts that match the components and label.\n\nThis method is slower than the first version because it has to compare components and label as well as build a new vector.\n\nThrows ArgumentError if eltype(components_iterator) is a concrete type and no forecast is found for a component.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_forecasts-Union{Tuple{T}, Tuple{Type{T},Forecasts,DateTime}} where T<:Forecast","page":"InfrastructureSystems","title":"InfrastructureSystems.get_forecasts","text":"get_forecasts(::Type{T}, forecasts::Forecasts, initial_time::Dates.DateTime)\n\nReturn an iterator of forecasts. T can be concrete or abstract.\n\nCall collect on the result if an array is desired.\n\nThis method is fast and efficient because it returns an iterator to existing vectors.\n\nExamples\n\niter = PowerSystems.get_forecasts(Deterministic{RenewableFix}, forecasts, initial_time)\niter = PowerSystems.get_forecasts(Forecast, forecasts, initial_time)\nforecasts = PowerSystems.get_forecasts(Forecast, forecasts, initial_time) |> collect\nforecasts = collect(PowerSystems.get_forecasts(Forecast, forecasts))\n\nSee also: iterate_forecasts\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_forecasts_horizon-Tuple{Forecasts}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_forecasts_horizon","text":"Return the horizon for all forecasts.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_forecasts_initial_time-Tuple{Forecasts}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_forecasts_initial_time","text":"Return the earliest initial_time for a forecast.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_forecasts_interval-Tuple{Forecasts}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_forecasts_interval","text":"Return the interval for all forecasts.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_forecasts_resolution-Tuple{Forecasts}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_forecasts_resolution","text":"Return the resolution for all forecasts.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_horizon-Tuple{Deterministic}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_horizon","text":"Get Deterministic horizon.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_horizon-Tuple{Probabilistic}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_horizon","text":"Get Probabilistic horizon.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_horizon-Tuple{ScenarioBased}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_horizon","text":"Get ScenarioBased horizon.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_initial_time-Tuple{Deterministic}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_initial_time","text":"Get Deterministic initial_time.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_initial_time-Tuple{Probabilistic}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_initial_time","text":"Get Probabilistic initial_time.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_initial_time-Tuple{ScenarioBased}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_initial_time","text":"Get ScenarioBased initial_time.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_internal-Tuple{Deterministic}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_internal","text":"Get Deterministic internal.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_internal-Tuple{Probabilistic}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_internal","text":"Get Probabilistic internal.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_internal-Tuple{ScenarioBased}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_internal","text":"Get ScenarioBased internal.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_label-Tuple{Deterministic}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_label","text":"Get Deterministic label.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_label-Tuple{Probabilistic}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_label","text":"Get Probabilistic label.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_label-Tuple{ScenarioBased}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_label","text":"Get ScenarioBased label.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_log_events-Tuple{LogEventTracker,Base.CoreLogging.LogLevel}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_log_events","text":"Returns an iterable of log events for a level.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_percentiles-Tuple{Probabilistic}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_percentiles","text":"Get Probabilistic percentiles.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_resolution-Tuple{Deterministic}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_resolution","text":"Get Deterministic resolution.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_resolution-Tuple{Probabilistic}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_resolution","text":"Get Probabilistic resolution.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_resolution-Tuple{ScenarioBased}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_resolution","text":"Get ScenarioBased resolution.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_scenario_count-Tuple{ScenarioBased}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_scenario_count","text":"Get ScenarioBased scenario_count.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_start_index-Tuple{Deterministic}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_start_index","text":"Get Deterministic start_index.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_start_index-Tuple{Probabilistic}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_start_index","text":"Get Probabilistic start_index.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_start_index-Tuple{ScenarioBased}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_start_index","text":"Get ScenarioBased start_index.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_timeseries-Tuple{Forecast}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_timeseries","text":"get_timeseries(forecast::Forecast)\n\nReturn the timeseries for the forecast.\n\nNote: timeseries data is stored in TimeSeries.TimeArray objects. TimeArray does not currently support Base.view, so calling this function results in a memory allocation and copy. Tracked in https://github.com/JuliaStats/TimeSeries.jl/issues/419.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.iterate_components-Tuple{Components}","page":"InfrastructureSystems","title":"InfrastructureSystems.iterate_components","text":"iterate_components(obj) where T <: InfrastructureSystemsType\n\nIterates over all components.\n\nExamples\n\nfor component in iterate_components(obj)\n    @show component\nend\n\nSee also: get_components\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.iterate_forecasts-Tuple{Forecasts}","page":"InfrastructureSystems","title":"InfrastructureSystems.iterate_forecasts","text":"Iterates over all forecasts in order of initial time.\n\nExamples\n\nfor forecast in iterate_forecasts(forecasts)\n    @show forecast\nend\n\nSee also: get_forecasts\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.make_forecasts-Tuple{Deterministic,Dates.Period,Int64}","page":"InfrastructureSystems","title":"InfrastructureSystems.make_forecasts","text":"make_forecasts(forecast::Deterministic, interval::Dates.Period, horizon::Int)\n\nMake a vector of forecasts by incrementing through a forecast by interval and horizon.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.make_forecasts-Tuple{SystemData,AbstractString,Module}","page":"InfrastructureSystems","title":"InfrastructureSystems.make_forecasts","text":"make_forecasts(data::SystemData, metadata_file::AbstractString; resolution=nothing)\n\nMakes forecasts from a metadata file.\n\nArguments\n\ndata::SystemData: system\nmetadata_file::AbstractString: path to metadata file\nmod::Module: calling module\nresolution::{Nothing, Dates.Period}: skip any forecasts that don't match this resolution\n\nSee TimeseriesFileMetadata for description of what the file should contain.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.make_forecasts-Tuple{SystemData,Array{TimeseriesFileMetadata,1},Module}","page":"InfrastructureSystems","title":"InfrastructureSystems.make_forecasts","text":"make_forecasts(data::SystemData, timeseries_metadata::Vector{TimeseriesFileMetadata};\n               resolution=nothing)\n\nReturn a vector of forecasts from a vector of TimeseriesFileMetadata values.\n\nArguments\n\ndata::SystemData: system\ntimeseries_metadata::Vector{TimeseriesFileMetadata}: metadata values\nresolution::{Nothing, Dates.Period}: skip any forecasts that don't match this resolution\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.make_forecasts-Union{Tuple{T}, Tuple{FlattenIteratorWrapper{T},Period,Int64}} where T<:Forecast","page":"InfrastructureSystems","title":"InfrastructureSystems.make_forecasts","text":"make_forecasts(forecast::FlattenIteratorWrapper{T},\n                interval::Dates.Period, horizon::Int) where T <: Forecast\n\nMake an iterator of forecasts by incrementing through a vector of forecasts by interval and horizon.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.open_file_logger","page":"InfrastructureSystems","title":"InfrastructureSystems.open_file_logger","text":"open_file_logger(func, filename[, level, mode])\n\nOpens a file logger using Logging.SimpleLogger.\n\nExample\n\nopen_file_logger(\"log.txt\", Logging.Info) do logger\n    global_logger(logger)\n    @info \"hello world\"\nend\n\n\n\n\n\n","category":"function"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.read_timeseries_metadata-Tuple{AbstractString}","page":"InfrastructureSystems","title":"InfrastructureSystems.read_timeseries_metadata","text":"Reads forecast metadata and fixes relative paths to the data files.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.remove_component!-Union{Tuple{T}, Tuple{Components,T}} where T<:InfrastructureSystemsType","page":"InfrastructureSystems","title":"InfrastructureSystems.remove_component!","text":"remove_component!(\n                  components::Components,\n                  component::T,\n                 ) where T <: InfrastructureSystemsType\n\nRemove a component by its value.\n\nThrows ArgumentError if the component is not stored.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.remove_component!-Union{Tuple{T}, Tuple{Type{T},Components,AbstractString}} where T<:InfrastructureSystemsType","page":"InfrastructureSystems","title":"InfrastructureSystems.remove_component!","text":"remove_component!(\n                  ::Type{T},\n                  components::Components,\n                  name::AbstractString,\n                  ) where T <: InfrastructureSystemsType\n\nRemove a component by its name.\n\nThrows ArgumentError if the component is not stored.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.remove_components!-Union{Tuple{T}, Tuple{Type{T},Components}} where T<:InfrastructureSystemsType","page":"InfrastructureSystems","title":"InfrastructureSystems.remove_components!","text":"remove_components!(\n                   ::Type{T},\n                   components::Components,\n                  ) where T <: InfrastructureSystemsType\n\nRemove all components of type T.\n\nThrows ArgumentError if the type is not stored.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.remove_forecast!-Union{Tuple{T}, Tuple{Forecasts,T}} where T<:Forecast","page":"InfrastructureSystems","title":"InfrastructureSystems.remove_forecast!","text":"remove_forecast(forecasts::Forecasts, forecast::Forecast)\n\nRemove the forecast from the system.\n\nThrows ArgumentError if the forecast is not stored.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.report_log_summary-Tuple{LogEventTracker}","page":"InfrastructureSystems","title":"InfrastructureSystems.report_log_summary","text":"Returns a summary of log event counts by level.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.report_log_summary-Tuple{MultiLogger}","page":"InfrastructureSystems","title":"InfrastructureSystems.report_log_summary","text":"Returns a summary of log event counts by level.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.split_forecasts!-Union{Tuple{T}, Tuple{SystemData,FlattenIteratorWrapper{T},Period,Int64}} where T<:Forecast","page":"InfrastructureSystems","title":"InfrastructureSystems.split_forecasts!","text":"split_forecasts!(data::SystemData,\n                 forecasts,\n                 interval::Dates.Period,\n                 horizon::Int) where T <: Forecast\n\nReplaces system forecasts with a set of forecasts by incrementing through an iterable set of forecasts by interval and horizon.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.validate_struct-Tuple{InfrastructureSystemsType}","page":"InfrastructureSystems","title":"InfrastructureSystems.validate_struct","text":"Validates a struct.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#Internal-1","page":"InfrastructureSystems","title":"Internal","text":"","category":"section"},{"location":"api/InfrastructureSystems/#","page":"InfrastructureSystems","title":"InfrastructureSystems","text":"Modules = [InfrastructureSystems]\nPublic = false","category":"page"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.LazyDictFromIterator-Union{Tuple{V}, Tuple{K}, Tuple{Type{K},Type{V},Any,Function}} where V where K","page":"InfrastructureSystems","title":"InfrastructureSystems.LazyDictFromIterator","text":"LazyDictFromIterator creates a dictionary from an iterator, but only increments the iterator and adds items to the dictionary as it needs them. In the worst case it is identical to creating a dictionary by iterating over the entire list. Each V should have a K member.\n\nArguments\n\nK: type of the dictionary keys\nV: type of the dictionary values\niter: any object implementing the Iterator interface\ngetter::Function: method to call on V to get its K\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#Base.close-Tuple{MultiLogger}","page":"InfrastructureSystems","title":"Base.close","text":"Ensures that any file streams are flushed and closed.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#Base.flush-Tuple{MultiLogger}","page":"InfrastructureSystems","title":"Base.flush","text":"Flush any file streams.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#Base.get-Union{Tuple{K}, Tuple{LazyDictFromIterator,K}} where K","page":"InfrastructureSystems","title":"Base.get","text":"Returns the item mapped to key. If the key is already stored then it will be returned with a dictionary lookup. If it has not been stored then iterate over the list until it is found.\n\nReturns nothing if key is not found.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems._get_all_concrete_subtypes-Union{Tuple{T}, Tuple{Type{T},Array{DataType,1}}} where T","page":"InfrastructureSystems","title":"InfrastructureSystems._get_all_concrete_subtypes","text":"Recursively builds a vector of subtypes.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems._validate_forecast-Tuple{SystemData,Forecast}","page":"InfrastructureSystems","title":"InfrastructureSystems._validate_forecast","text":"Checks that the component exists in data and the UUID's match.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.compare_values-Union{Tuple{T}, Tuple{T,T}} where T","page":"InfrastructureSystems","title":"InfrastructureSystems.compare_values","text":"Recursively compares immutable struct values by performing == on each field in the struct. When performing == on values of immutable structs Julia will perform === on each field.  This will return false if any field is mutable even if the contents are the same.  So, comparison of any InfrastructureSystems type with an array will fail.\n\nThis is an unresolved Julia issue. Refer to https://github.com/JuliaLang/julia/issues/4648.\n\nAn option is to overload == for all subtypes of PowerSystemType. That may not be appropriate in all cases. Until the Julia developers decide on a solution, this function is provided for convenience for specific comparisons.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.convert_type!-Union{Tuple{T}, Tuple{Forecasts,NamedTuple,Dict}} where T<:Forecast","page":"InfrastructureSystems","title":"InfrastructureSystems.convert_type!","text":"Converts forecast JSON data to Forecasts.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.convert_type-Union{Tuple{T}, Tuple{Type{T},Any}} where T","page":"InfrastructureSystems","title":"InfrastructureSystems.convert_type","text":"Converts an object deserialized from JSON into a Julia type, such as NamedTuple, to an instance of T. Similar to Base.convert, but not a viable replacement.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.convert_type-Union{Tuple{T}, Tuple{Type{T},NamedTuple,Dict,TimeArray}} where T<:Forecast","page":"InfrastructureSystems","title":"InfrastructureSystems.convert_type","text":"Creates a Forecast object by decoding the data that was in JSON. This data stores the values for the field contributingdevices as UUIDs, so this will lookup each device in devices.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.from_json-Union{Tuple{T}, Tuple{Type{T},String}} where T<:InfrastructureSystemsType","page":"InfrastructureSystems","title":"InfrastructureSystems.from_json","text":"Deserializes a InfrastructureSystemsType from a JSON filename.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.from_json-Union{Tuple{T}, Tuple{Union{IO, String},Type{T}}} where T<:InfrastructureSystemsType","page":"InfrastructureSystems","title":"InfrastructureSystems.from_json","text":"Deserializes a InfrastructureSystemsType from String or IO.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_abstract_subtypes-Union{Tuple{Type{T}}, Tuple{T}} where T","page":"InfrastructureSystems","title":"InfrastructureSystems.get_abstract_subtypes","text":"Returns an array of abstract types that are direct subtypes of T.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_all_concrete_subtypes-Union{Tuple{Type{T}}, Tuple{T}} where T","page":"InfrastructureSystems","title":"InfrastructureSystems.get_all_concrete_subtypes","text":"Returns an array of all concrete subtypes of T.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_component_forecasts-Union{Tuple{T}, Tuple{Type{T},Forecasts,DateTime}} where T<:InfrastructureSystemsType","page":"InfrastructureSystems","title":"InfrastructureSystems.get_component_forecasts","text":"get_component_forecasts(\n                        ::Type{T},\n                        forecasts::Forecasts,\n                        initial_time::Dates.DateTime,\n                       ) where T <: InfrastructureSystemsType\n\nGet the forecasts of a component of type T with initial_time. The resulting container can contain Forecasts of dissimilar types.\n\nThrows ArgumentError if T is not a concrete type.\n\nSee also: get_component\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_component_types_raw-Tuple{Type{Components},NamedTuple}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_component_types_raw","text":"Return an iterable of component types deserialized from JSON.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_components_raw-Union{Tuple{T}, Tuple{Type{Components},Type{T},NamedTuple}} where T<:InfrastructureSystemsType","page":"InfrastructureSystems","title":"InfrastructureSystems.get_components_raw","text":"Return an iterable of components as NamedTuples deserialized from JSON.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_concrete_subtypes-Union{Tuple{Type{T}}, Tuple{T}} where T","page":"InfrastructureSystems","title":"InfrastructureSystems.get_concrete_subtypes","text":"Returns an array of concrete types that are direct subtypes of T.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_period_columns-Tuple{Type{InfrastructureSystems.TimeseriesFormatPeriodAsColumn},CSV.File}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_period_columns","text":"Return the column names that specify the Period.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_step_time-Union{Tuple{T}, Tuple{Type{T},File,AbstractArray}} where T<:InfrastructureSystems.TimeseriesFileFormat","page":"InfrastructureSystems","title":"InfrastructureSystems.get_step_time","text":"Return a DateTime for the step between values as specified by the period in the file.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_timeseries_format-Tuple{CSV.File}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_timeseries_format","text":"Return the timeseries format used in the CSV file.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_timestamp-Tuple{Type{InfrastructureSystems.TimeseriesFormatYMDPeriodAsColumn},CSV.File,Int64}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_timestamp","text":"Return a Dates.DateTime for the row in the CSV file.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_unique_timestamps-Union{Tuple{T}, Tuple{Type{T},File}} where T<:InfrastructureSystems.TimeseriesFileFormat","page":"InfrastructureSystems","title":"InfrastructureSystems.get_unique_timestamps","text":"Return a vector of dicts of unique timestamps and their counts.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_uuid-Tuple{InfrastructureSystemsType}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_uuid","text":"Gets the UUID for any PowerSystemType.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_value_columns-Tuple{Type{InfrastructureSystems.TimeseriesFormatComponentsAsColumnsNoTime},CSV.File}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_value_columns","text":"Return the column names with values.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.get_value_columns-Tuple{Type{InfrastructureSystems.TimeseriesFormatYMDPeriodAsColumn},CSV.File}","page":"InfrastructureSystems","title":"InfrastructureSystems.get_value_columns","text":"Return the column names with values (components).\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.increment_count-Tuple{LogEventTracker,LogEvent,Bool}","page":"InfrastructureSystems","title":"InfrastructureSystems.increment_count","text":"Increments the count of a log event.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.read_timeseries","page":"InfrastructureSystems","title":"InfrastructureSystems.read_timeseries","text":"read_timeseries(file_path::AbstractString, component_name=nothing)\n\nReturn a TimeArray from a CSV file.\n\nPass component_name when the file does not have the component name in a column header.\n\n\n\n\n\n","category":"function"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.read_timeseries-Union{Tuple{T}, Tuple{Type{T},File,AbstractString}} where T<:InfrastructureSystems.TimeseriesFormatPeriodAsHeader","page":"InfrastructureSystems","title":"InfrastructureSystems.read_timeseries","text":"This version of the function supports the format where there is no column header for a component, so the component_name must be passed in.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.read_timeseries-Union{Tuple{T}, Tuple{Type{T},File}, Tuple{Type{T},File,Any}} where T<:InfrastructureSystems.TimeseriesFormatComponentsAsColumnsNoTime","page":"InfrastructureSystems","title":"InfrastructureSystems.read_timeseries","text":"This version of the function only has component_name to match the interface. It is unused.\n\nSet start_datetime as a keyword argument for the starting timestamp, otherwise the current day is used.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.read_timeseries-Union{Tuple{T}, Tuple{Type{T},File}, Tuple{Type{T},File,Any}} where T<:InfrastructureSystems.TimeseriesFormatPeriodAsColumn","page":"InfrastructureSystems","title":"InfrastructureSystems.read_timeseries","text":"Return a TimeSeries.TimeArray representing the CSV file.\n\nThis version of the function only has component_name to match the interface. It is unused.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.replace_iterator-Tuple{InfrastructureSystems.LazyDictFromIterator,Any}","page":"InfrastructureSystems","title":"InfrastructureSystems.replace_iterator","text":"Replace the iterator, maintaining the cached dict.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.reset_iterator-Tuple{InfrastructureSystems.LazyDictFromIterator}","page":"InfrastructureSystems","title":"InfrastructureSystems.reset_iterator","text":"Reset the iterator for cases where underlying arrays have changed.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.separate_type_and_parameter_types-Tuple{String}","page":"InfrastructureSystems","title":"InfrastructureSystems.separate_type_and_parameter_types","text":"Return a Tuple of type and parameter types for cases where a parametric type has been encoded as a string. If the type is not parameterized then just return the type.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.strip_module_names-Tuple{String}","page":"InfrastructureSystems","title":"InfrastructureSystems.strip_module_names","text":"Strips the module name(s) off of a type.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.supertypes-Union{Tuple{Type{T}}, Tuple{T}, Tuple{Type{T},Any}} where T","page":"InfrastructureSystems","title":"InfrastructureSystems.supertypes","text":"Returns an array of all super types of T.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.to_json-Union{Tuple{T}, Tuple{IO,T}} where T<:InfrastructureSystemsType","page":"InfrastructureSystems","title":"InfrastructureSystems.to_json","text":"JSON Serializes a InfrastructureSystemsType to an IO stream in JSON.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.to_json-Union{Tuple{T}, Tuple{T,AbstractString}} where T<:InfrastructureSystemsType","page":"InfrastructureSystems","title":"InfrastructureSystems.to_json","text":"Serializes a InfrastructureSystemsType to a JSON file.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.to_json-Union{Tuple{T}, Tuple{T}} where T<:InfrastructureSystemsType","page":"InfrastructureSystems","title":"InfrastructureSystems.to_json","text":"Serializes a InfrastructureSystemsType to a JSON string.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.type_to_symbol-Tuple{DataType}","page":"InfrastructureSystems","title":"InfrastructureSystems.type_to_symbol","text":"Converts a DataType to a Symbol, stripping off the module name(s).\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#InfrastructureSystems.validate_components-Tuple{Components}","page":"InfrastructureSystems","title":"InfrastructureSystems.validate_components","text":"validate_components(components::Components)\n\nIterates over all components and throws InvalidRange if any of the component's field values are outside of defined valid range.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#JSON2.read-Union{Tuple{T}, Tuple{IO,Type{T}}} where T<:TimeSeries.TimeArray","page":"InfrastructureSystems","title":"JSON2.read","text":"Enables JSON deserialization of TimeSeries.TimeArray. The default implementation fails because the data field is defined as an AbstractArray. Deserialization can't determine the actual concrete type.\n\n\n\n\n\n","category":"method"},{"location":"api/InfrastructureSystems/#JSON2.write-Tuple{Dates.Period}","page":"InfrastructureSystems","title":"JSON2.write","text":"Enables JSON deserialization of Dates.Period. The default implementation fails because the field is defined as abstract. Encode the type when serializing so that the correct value can be deserialized.\n\n\n\n\n\n","category":"method"},{"location":"man/tests/#Tests-1","page":"Tests","title":"Tests","text":"","category":"section"},{"location":"man/tests/#","page":"Tests","title":"Tests","text":"Unit tests can be executed in the REPL by executing the following:","category":"page"},{"location":"man/tests/#","page":"Tests","title":"Tests","text":"julia> include(\"test/runtests.jl\")","category":"page"},{"location":"man/tests/#","page":"Tests","title":"Tests","text":"The unit test module supports several customizations to aid development and debug.","category":"page"},{"location":"man/tests/#","page":"Tests","title":"Tests","text":"Run a subset of tests in the REPL:","category":"page"},{"location":"man/tests/#","page":"Tests","title":"Tests","text":"julia> push!(ARGS, \"<test_filename_without_.jl>\")\njulia> include(\"test/runtests.jl\")","category":"page"},{"location":"man/tests/#","page":"Tests","title":"Tests","text":"Change console logging level (defaults to Error):","category":"page"},{"location":"man/tests/#","page":"Tests","title":"Tests","text":"julia> ENV[\"PS_CONSOLE_LOG_LEVEL\"] = Info\njulia> include(\"test/runtests.jl\")","category":"page"},{"location":"man/tests/#","page":"Tests","title":"Tests","text":"Change log file (./power-systems.log) logging level (defaults to Info):","category":"page"},{"location":"man/tests/#","page":"Tests","title":"Tests","text":"julia> ENV[\"PS_LOG_LEVEL\"] = Debug\njulia> include(\"test/runtests.jl\")","category":"page"},{"location":"man/tests/#","page":"Tests","title":"Tests","text":"The unit test module appends a summary of all log message counts to the log file.  If a message is logged too frequently then consider tagging that message with maxlog=X to suppress it.","category":"page"},{"location":"man/guide/#User-Guide-1","page":"User Guide","title":"User Guide","text":"","category":"section"},{"location":"man/guide/#Installation-1","page":"User Guide","title":"Installation","text":"","category":"section"},{"location":"man/guide/#","page":"User Guide","title":"User Guide","text":"This package is not yet registered. Until it is, things may change. It is perfectly usable but should not be considered stable.","category":"page"},{"location":"man/guide/#","page":"User Guide","title":"User Guide","text":"You can install it by typing","category":"page"},{"location":"man/guide/#","page":"User Guide","title":"User Guide","text":"julia> Pkg.clone(\"https://github.com/NREL/InfrastructureSystems.jl.git\")","category":"page"},{"location":"#InfrastructureSystems.jl-1","page":"Home","title":"InfrastructureSystems.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"InfrastructureSystems.jl is a Julia package for doing Power Systems Modeling.","category":"page"},{"location":"#Installation-1","page":"Home","title":"Installation","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"You can install it by typing","category":"page"},{"location":"#","page":"Home","title":"Home","text":"julia> Pkg.clone(\"https://github.com/NREL/InfrastructureSystems.jl.git\")","category":"page"},{"location":"#Usage-1","page":"Home","title":"Usage","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Once installed, the InfrastructureSystems package can by used by typing","category":"page"},{"location":"#","page":"Home","title":"Home","text":"using InfrastructureSystems","category":"page"},{"location":"docs/#Documentation-1","page":"Documentation","title":"Documentation","text":"","category":"section"},{"location":"docs/#Requirements-1","page":"Documentation","title":"Requirements","text":"","category":"section"},{"location":"docs/#","page":"Documentation","title":"Documentation","text":"Pkg.add(\"Documenter\")","category":"page"},{"location":"docs/#","page":"Documentation","title":"Documentation","text":"pip install ghp-import","category":"page"},{"location":"docs/#Run-1","page":"Documentation","title":"Run","text":"","category":"section"},{"location":"docs/#","page":"Documentation","title":"Documentation","text":"cd docs\nmake html\nopen build/index.html","category":"page"}]
}
